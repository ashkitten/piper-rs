[workspace]
members = ["crates/sonic-rs-sys", "crates/espeak-rs", "crates/piper-rs-cli"]
resolver = "1"

[package]
name = "piper-rs"
version = "0.1.5"
edition = "2021"
license = "MIT"
description = "Use piper TTS models in Rust"
repository = "https://github.com/thewh1teagle/piper-rs"

[dependencies]
# Local crates
espeak-rs = { path = "crates/espeak-rs", version = "0.1.5" }
sonic-rs-sys = { path = "crates/sonic-rs-sys", version = "0.1.5" }

ndarray = "0.16.1"
serde = { version = "1.0.160", features = ["derive"] }
serde_json = "1.0.89"
ort = { version = "2.0.0-rc.9" }
once_cell = "1.18.0"
riff-wave = "0.1.3"
flume = { version = "0.11.0", default-features = false, features = ["async"] }
rayon = { version = "1.8.1" }

[dev-dependencies]
rodio = "0.19.0"

[features]
default = ["compile-espeak-intonations"]
compile-espeak-intonations = ["espeak-rs/compile-espeak-intonations"]

[workspace.metadata.cross.target.aarch64-unknown-linux-gnu]
# Install packages for arm64 cross compile
pre-build = [
    "dpkg --add-architecture $CROSS_DEB_ARCH",
    "apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH librust-alsa-sys-dev:$CROSS_DEB_ARCH"
]